/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import main.BloodTestScheduler;
/**
 *
 * @author igawa
 */
public class BloodTestSchedulerUI extends javax.swing.JFrame {

    
     private BloodTestScheduler scheduler;

    public BloodTestSchedulerUI(BloodTestScheduler scheduler) {
        this.scheduler = scheduler;
        initComponents();
    }
    /**
     * Creates new form BloodTestSchedulerUI
     */
    public BloodTestSchedulerUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayArea = new javax.swing.JTextArea();
        addPatientButton = new javax.swing.JButton();
        processNextButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        displayArea.setColumns(20);
        displayArea.setRows(5);
        jScrollPane1.setViewportView(displayArea);

        jScrollPane2.setViewportView(jScrollPane1);

        addPatientButton.setText("Add Patient");
        addPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientButtonActionPerformed(evt);
            }
        });

        processNextButton.setText("Next Patient");
        processNextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processNextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(addPatientButton)
                .addGap(37, 37, 37)
                .addComponent(processNextButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPatientButton)
                    .addComponent(processNextButton))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientButtonActionPerformed
        String name = JOptionPane.showInputDialog(this, "Enter patient name:");
        if (name != null && !name.trim().isEmpty()) {
            scheduler.addPatient(name);
            displayArea.append("Patient added: " + name + "\n");
        }
    }//GEN-LAST:event_addPatientButtonActionPerformed

    private void processNextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processNextButtonActionPerformed
        String nextPatient = scheduler.processNextPatient();
        if (nextPatient != null) {
            displayArea.append("Processing: " + nextPatient + "\n");
        } else {
            displayArea.append("No patients left in queue.\n");
        }
    }//GEN-LAST:event_processNextButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        BloodTestScheduler scheduler = new BloodTestScheduler();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BloodTestSchedulerUI(scheduler).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPatientButton;
    private javax.swing.JTextArea displayArea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton processNextButton;
    // End of variables declaration//GEN-END:variables
}
